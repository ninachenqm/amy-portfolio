/* src/index.css */
@import "tailwindcss";

/* 基础层：定义CSS变量和全局基础样式 */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 11 76% 80%;
    --primary-foreground: 355.7 100% 97.3%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%; /* CSS variable for border color (light mode) */
    --input: 240 5.9% 90%;
    --ring: 11 76% 80%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 20 14.3% 4.1%;
    --foreground: 0 0% 95%;
    --card: 24 9.8% 10%;
    --card-foreground: 0 0% 95%;
    --popover: 0 0% 9%;
    --popover-foreground: 0 0% 95%;
    --primary: 11 76% 80%;
    --primary-foreground: 355.7 100% 97.3%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 15%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 12 6.5% 15.1%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 85.7% 97.3%;
    --border: 240 3.7% 15.9%; /* CSS variable for border color (dark mode) */
    --input: 240 3.7% 15.9%;
    --ring: 11 76% 80%;
  }

  * {
    border-color: hsl(var(--border));
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    /* font-family: var(--font-mono); */ /* We'll handle fonts later */
  }

  html {
    scroll-behavior: smooth;
  }
}

/* 组件层：定义可复用的自定义组件类 */
@layer components {
  .gradient-text {
    @apply bg-clip-text text-transparent; /* Standard utilities, fine with @apply */
    background-image: linear-gradient(to right, hsl(var(--primary)), hsl(var(--primary) / 0.7)); /* Direct CSS for gradient */
  }

  /* 时间轴样式 */
  .timeline-item {
    @apply relative pl-8 pb-12; /* Layout utilities, fine with @apply */
    transition: transform 0.3s ease, opacity 0.3s ease; /* Standard CSS, fine */
  }
  .timeline-item::before {
    content: "";
    @apply absolute left-0 top-1 h-4 w-4 rounded-full; /* Layout and shape utilities, fine with @apply */
    background-color: hsl(var(--primary)); /* Direct CSS for color */
    transition: transform 0.3s ease, background-color 0.3s ease; /* Standard CSS, fine */
  }
  .timeline-item::after {
    content: "";
    position: absolute;
    left: 7px;
    top: calc(1rem + 0.25rem);
    bottom: 0;
    width: 2px;
    background-color: hsl(var(--border)); /* Direct CSS for color, already correct */
  }
  .timeline-item:last-child::after {
     height: 2rem;
  }
  .timeline-item:hover {
    transform: translateX(5px); /* Standard CSS, fine */
  }
  .timeline-item:hover::before {
    transform: scale(1.2); /* Standard CSS, fine */
    background-color: hsl(var(--primary) / 0.8); /* Direct CSS for color, already correct */
  }

  /* 技能卡片样式 */
  .skill-card {
    @apply transition-all duration-300 hover:scale-105 hover:shadow-lg; /* Standard utilities, fine with @apply */
  }

  /* 项目卡片相关样式 */
  .project-card {
    @apply transition-all duration-300 hover:-translate-y-1 hover:shadow-lg; /* Standard utilities, fine with @apply */
  }
  .project-content {
    @apply p-4; /* Standard utility, fine with @apply */
  }
  .project-tags {
    @apply flex flex-wrap gap-1; /* Standard utilities, fine with @apply */
  }
  .project-tag {
    @apply text-xs px-2 py-1 rounded-full; /* Text and layout utilities, fine with @apply */
    background-color: hsl(var(--primary) / 0.1); /* Direct CSS for color with opacity */
  }
  .project-links {
    @apply flex gap-2; /* Standard utility, fine with @apply */
  }

  /* 导航项样式 (用于Header) */
  .nav-item {
    @apply relative transition-all duration-300 ease-in-out; /* Standard utilities, fine with @apply */
  }
  .nav-item::after {
    content: "";
    @apply absolute -bottom-1 left-0 w-0 h-0.5 transition-all duration-300 ease-in-out; /* Layout and transition, fine with @apply */
    background-color: hsl(var(--primary)); /* Direct CSS for color */
  }
  .nav-item:hover::after,
  .nav-item.active::after {
    @apply w-full; /* Standard utility, fine with @apply */
  }

  /* Header滚动时的毛玻璃效果 */
  header.scrolled {
    @apply backdrop-blur-lg shadow-sm; /* Standard utilities, fine with @apply */
    background-color: hsl(var(--background) / 0.7); /* Direct CSS for background color with opacity */
    border-bottom-width: 1px; /* Direct CSS for border property */
    border-bottom-style: solid; /* Direct CSS for border property */
    border-bottom-color: hsl(var(--border) / 0.5); /* Direct CSS for border color with opacity */
  }
  /* No separate .dark header.scrolled is needed as hsl(var(--background)) and hsl(var(--border)) will use dark mode variables */

  /* 动态背景斑点效果 (already using direct CSS for colors, which is good) */
  .animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0.4;
    pointer-events: none;
    overflow: hidden;
  }
  .animated-background .blob {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
  }
  .animated-background .blob-1 {
    background-color: hsl(var(--primary) / 30%);
    width: 400px;
    height: 400px;
    top: 20%;
    left: 10%;
  }
  .animated-background .blob-2 {
    background-color: hsl(var(--primary) / 20%);
    width: 300px;
    height: 300px;
    top: 60%;
    right: 15%;
  }
  .animated-background .blob-3 {
    background-color: hsl(var(--primary) / 15%);
    width: 200px;
    height: 200px;
    bottom: 10%;
    left: 20%;
  }
}

/* 工具层：定义一些通用的工具类或动画 */
@layer utilities {
  .animate-in {
    animation: animateIn 0.5s ease-in-out;
  }
}

/* 动画关键帧定义 */
@keyframes animateIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
